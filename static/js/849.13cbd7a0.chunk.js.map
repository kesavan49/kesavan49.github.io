{"version":3,"file":"static/js/849.13cbd7a0.chunk.js","mappings":"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","sources":["webpack://ansterra-static/./src/components/input/input.module.scss?d7b5","components/input/input.tsx","container/form-control/form-control.tsx","components/carousel/carousel.tsx","pages/signin/signin.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"input_inputContainer__ZvCmS\",\"input\":\"input_input__EBh3D\",\"passImg\":\"input_passImg__FkCLp\"};","import React, { useEffect, useState } from \"react\";\nimport { hidePassword, viewPassword } from \"../../assets/images\";\n\nimport style from \"./input.module.scss\";\n\nconst Input = (props: any) => {\n  const { type = \"text\", disabled = false } = props;\n  const [password, togglePassword] = useState(false);\n  const [ctype, setType] = useState(type);\n\n  useEffect(() => {\n    if(type === 'password'){\n      setType(password ? 'text' : 'password');\n    }\n  }, [password, type]);\n\n  return (\n    <div className={style.inputContainer}>\n      <input type={ctype} className={style.input} disabled={disabled} />\n      {type === \"password\" ? (\n        <img className={style.passImg} src={password ? hidePassword : viewPassword} alt=\"password\" onClick={() => togglePassword(!password)} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Input;\n","const FromControl = ({\n  label,\n  input,\n  renderLabel,\n}: {\n  label: string | JSX.Element;\n  input: JSX.Element;\n  renderLabel?: () => JSX.Element;\n}) => {\n  return (\n    <div className=\"form-control\">\n      {renderLabel ? (\n        renderLabel()\n      ) : (\n        <label className=\"form-label\">{label}</label>\n      )}\n      {input}\n    </div>\n  );\n};\n\nexport default FromControl;\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  cloneElement,\n  Children,\n} from \"react\";\n\nimport \"./carousel.scss\";\n\ntype CarouselItemProps = {\n  children: React.ReactNode | string;\n  width?: string;\n};\n\nexport const CarouselItem: React.FC<CarouselItemProps> = ({\n  children,\n  width,\n}) => (\n  <div className=\"carousel-item\" style={{ width }}>\n    {children}\n  </div>\n);\n\ntype CarouselProps = {\n  children: React.ReactNode;\n};\n\nconst Carousel: React.FC<CarouselProps> = ({ children }) => {\n  const itemCount = React.Children.count(children);\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const [paused, setPaused] = useState<boolean>(false);\n\n  const updateIndex = useCallback(\n    (newIndex: number) => {\n      newIndex =\n        newIndex < 0 ? itemCount - 1 : newIndex >= itemCount ? 0 : newIndex;\n      setActiveIndex(newIndex);\n    },\n    [itemCount]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!paused) {\n        updateIndex(activeIndex + 1);\n      }\n    }, 3000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [paused, activeIndex, updateIndex]);\n\n  return (\n    <div\n      className=\"carousel\"\n      onMouseEnter={() => setPaused(true)}\n      onMouseLeave={() => setPaused(false)}\n    >\n      <div\n        className=\"inner\"\n        style={{ transform: `translateX(-${activeIndex * 100}%)` }}\n      >\n        {Children.map(children, (child: any, index) =>\n          cloneElement(child, { width: \"100%\" })\n        )}\n      </div>\n      <div className=\"indicators\">\n        {/* <button onClick={() => updateIndex(activeIndex - 1)}>Prev</button> */}\n        {Children.map(children, (child, index) => (\n          <span\n            className={`dot ${index === activeIndex ? \"active\" : \"\"}`}\n            onClick={() => updateIndex(index)}\n          >\n          </span>\n        ))}\n        {/* <button onClick={() => updateIndex(activeIndex + 1)}>Next</button> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { Fragment } from \"react\";\nimport {\n  Bag,\n  loginInfo,\n  Megaphone,\n  signBack,\n  signBg,\n  signFront,\n  SignupBG,\n  Spark,\n} from \"../../assets/images\";\nimport { Button, Header } from \"../../components\";\nimport Carousel, { CarouselItem } from \"../../components/carousel/carousel\";\nimport Input from \"../../components/input/input\";\nimport FromControl from \"../../container/form-control/form-control\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nimport \"./signin.scss\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst sliderData = [\n  {\n    author: \"-Steve R (Year 7)\",\n    descrption:\n      \"The Testroom platform enabled me to improve my performance significantly and gain a deeper understanding of the curriculum\",\n  },\n  {\n    author: \"-Steve R (Year 7)\",\n    descrption:\n      \"The Testroom platform enabled me to improve my performance significantly and gain a deeper understanding of the curriculum\",\n  },\n  {\n    author: \"-Steve R (Year 7)\",\n    descrption:\n      \"The Testroom platform enabled me to improve my performance significantly and gain a deeper understanding of the curriculum\",\n  },\n  {\n    author: \"-Steve R (Year 7)\",\n    descrption:\n      \"The Testroom platform enabled me to improve my performance significantly and gain a deeper understanding of the curriculum\",\n  },\n];\n\nconst SignIn = () => {\n  const navigate = useNavigate();\n  return (\n    <div className=\"signin-container\">\n      <div className=\"left\">\n        <Header></Header>\n        <div className=\"center p-3 d-flex d-col\">\n          <h2>Welcome back</h2>\n          <div className=\"left-content\">\n            <FromControl label=\"First name\" input={<Input />} />\n            <FromControl\n              label=\"Password\"\n              input={\n                <Fragment>\n                  <Input type=\"password\" />\n                  <div className=\"tooltext\">Forgot Password?</div>\n                </Fragment>\n              }\n            />\n            <div className=\"form-control d-center\">\n              <ReCAPTCHA sitekey=\"6LcjZfYlAAAAAECFC3eKbH6n7FcYqn8uabhWf_Hr\" />\n            </div>\n            <div className=\"form-control\">\n              <div className=\"signin-btn\">\n                <img src={signFront} alt=\"Sign in\" />\n                <img src={signBg} alt=\"Sign in\" className=\"sign-text\" />\n                <img src={signBack} alt=\"Sign in\" />\n                <div className=\"sign-txt\">Sign in</div>\n              </div>\n            </div>\n            <div className=\"form-control text\">\n              By signing in, I accept the{\" \"}\n              <span className=\"link\">Terms of Service</span> as well as{\" \"}\n              <span className=\"link\">Privacy policy</span>\n            </div>\n            <div className=\"form-control text\">\n              Don’t have an account? <span className=\"link\" onClick={() => navigate('/signup')}>Sign up</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"right\">\n        <div className=\"slider\">\n          <Carousel>\n            {sliderData.map((item) => (\n              <CarouselItem>\n                <div className=\"slide\">\n                  <h1 className=\"description\">“{item.descrption}”</h1>\n                  <div className=\"author\">{item.author}</div>\n                </div>\n              </CarouselItem>\n            ))}\n          </Carousel>\n        </div>\n        <div className=\"full\">\n          <img src={loginInfo} alt=\"login info\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n"],"names":["props","_props$type","type","_props$disabled","disabled","_useState","useState","_useState2","_slicedToArray","password","togglePassword","_useState3","_useState4","ctype","setType","useEffect","_jsxs","className","style","children","_jsx","src","hidePassword","viewPassword","alt","onClick","_ref","label","input","renderLabel","CarouselItem","width","_ref2","itemCount","React","activeIndex","setActiveIndex","paused","setPaused","updateIndex","useCallback","newIndex","interval","setInterval","clearInterval","onMouseEnter","onMouseLeave","transform","concat","Children","child","index","cloneElement","sliderData","author","descrption","navigate","useNavigate","Header","FromControl","Input","Fragment","ReCAPTCHA","sitekey","signFront","signBg","signBack","Carousel","map","item","loginInfo"],"sourceRoot":""}